// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using app1.Model;

#nullable disable

namespace app1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230313093033_AddLocalUsersTable")]
    partial class AddLocalUsersTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("app1.Model.LocalUserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passwrod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("localUser");
                });

            modelBuilder.Entity("app1.Model.VillaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateData")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateData")
                        .HasColumnType("datetime2");

                    b.Property<int>("sqft")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateData = new DateTime(2023, 3, 13, 9, 30, 32, 966, DateTimeKind.Local).AddTicks(7800),
                            Description = "Experience luxury living in this beautiful villa, complete with private pool and stunning views of the ocean.",
                            ImageUrl = "https://example.com/luxury-villa.jpg",
                            Name = "Luxury Villa",
                            Rate = 500.0,
                            UpdateData = new DateTime(2023, 3, 13, 9, 30, 32, 966, DateTimeKind.Local).AddTicks(7839),
                            sqft = 3000
                        },
                        new
                        {
                            Id = 2,
                            CreateData = new DateTime(2023, 3, 13, 9, 30, 32, 966, DateTimeKind.Local).AddTicks(7843),
                            Description = "Relax and unwind in this beachfront villa, just steps away from the pristine white sands of the beach.",
                            ImageUrl = "https://example.com/beachfront-villa.jpg",
                            Name = "Beachfront Villa",
                            Rate = 350.0,
                            UpdateData = new DateTime(2023, 3, 13, 9, 30, 32, 966, DateTimeKind.Local).AddTicks(7845),
                            sqft = 2000
                        },
                        new
                        {
                            Id = 3,
                            CreateData = new DateTime(2023, 3, 13, 9, 30, 32, 966, DateTimeKind.Local).AddTicks(7847),
                            Description = "Escape to this tropical paradise villa, surrounded by lush greenery and a serene waterfall.",
                            ImageUrl = "https://example.com/tropical-paradise-villa.jpg",
                            Name = "Tropical Paradise Villa",
                            Rate = 450.0,
                            UpdateData = new DateTime(2023, 3, 13, 9, 30, 32, 966, DateTimeKind.Local).AddTicks(7849),
                            sqft = 2500
                        });
                });

            modelBuilder.Entity("app1.Model.VillaNumber", b =>
                {
                    b.Property<int>("VillaNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecialDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Update")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillaID")
                        .HasColumnType("int");

                    b.HasKey("VillaNo");

                    b.HasIndex("VillaID");

                    b.ToTable("VillaNumbers");
                });

            modelBuilder.Entity("app1.Model.VillaNumber", b =>
                {
                    b.HasOne("app1.Model.VillaModel", "villa")
                        .WithMany()
                        .HasForeignKey("VillaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("villa");
                });
#pragma warning restore 612, 618
        }
    }
}
